Вопрос 1:
   // Create object paddle
    private GRect paddle;
    Использовал, для того чтоб создать одну единственную ссылку на ракетку, и иметь доступ к ней
    во всех методах.

    // Create object ball
    private GOval ball;
    Использовал, для того чтоб создать одну единственную ссылку на шарик, и иметь доступ к нему
    во всех методах.

    // start ball's speed
    private double vx;
    private double vy;
    Во-первых, потому что это рекомендация в задание, во-вторых, при декомпозиции удобно
    использовать, как поле класса, в третьих передавать как параметр две переменных,
    а возвращать как массив и переприсваивать после - код будет большим и громоздким.

    //true if mouse click
    boolean click;
    Переопределенный метод mouseClicked(MouseEvent mouseEvent) предлагаемый нам библиотекой имеет
    ничего не может вернуть (void), по-этому факт клика вытягиваем в переменную и используем
    в указанном в задании методе waitForClick().

Вопрос 2:
     // number of attempts
     int life = NTURNS;
     // number of bricks on the field
     int bricksCounter = NBRICKS_PER_ROW * NBRICK_ROWS;
     // main cycle
     while (life != 0 && bricksCounter != 0) { ...........
     Есть счетчик кирпичей bricksCounter, который уменьшается при разбивании кирпича на 1.
     И есть счетчик попыток life, который уменьшается на 1 при потере мячика.
     Главный цикл работает, пока эти параметры не равны 0, любой из них при равенстве с 0 даст
     выход из главного цикла, а соответственно и конец игры.